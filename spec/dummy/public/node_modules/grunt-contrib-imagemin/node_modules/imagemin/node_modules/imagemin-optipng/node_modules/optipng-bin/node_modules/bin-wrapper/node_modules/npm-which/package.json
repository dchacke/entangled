{
  "name": "npm-which",
  "version": "1.0.2",
  "description": "Locate a program or locally installed node module's executable",
  "main": "index.js",
  "bin": {
    "npm-which": "bin/npm-which.js"
  },
  "scripts": {
    "test": "faucet"
  },
  "author": {
    "name": "Tim Oxley"
  },
  "license": "MIT",
  "dependencies": {
    "commander": "^2.2.0",
    "npm-path": "^1.0.0",
    "which": "^1.0.5"
  },
  "devDependencies": {
    "faucet": "0.0.1",
    "tape": "^2.12.3"
  },
  "directories": {
    "test": "test"
  },
  "repository": {
    "type": "git",
    "url": "https://github.com/timoxley/npm-which.git"
  },
  "keywords": [
    "npm",
    "path",
    "executable",
    "run"
  ],
  "bugs": {
    "url": "https://github.com/timoxley/npm-which/issues"
  },
  "homepage": "https://github.com/timoxley/npm-which",
  "readme": "# npm-which\n\n### Locate a program or locally installed node module executable\n\nUse `npm-which` to locate executables which may be installed in the\nlocal 'node_modules/.bin', or in a parent 'node_modules/.bin' directory.\n\n`npm-which` runs in the context of an npm lifecycle script with its npm-modified PATH.\n\ni.e. if you install a module that has an executable script using npm install, that module's executable will be picked up by `npm-which` from anywhere in the ./node_modules tree.\n\n## Installation\n\n```bash\n> npm install -g npm-which\n```\n\n## Usage\n\n### Command Line\n\n```bash\n> npm-which tape\n/Users/timoxley/Projects/npm-which/node_modules/.bin/tape\n```\n\nThis is the equivalent of running an npm script with the body: `which tape`.\n\n### Example\n\n```bash\n# unless something is installed in a node_modules\n# npm-which and which(1) will have the same output:\n\n> which tape\n/usr/local/bin/tape\n\n> npm-which tape\n/usr/local/bin/tape\n\n# install tape local to current dir\n# tape includes an executable 'tape'\n> npm install tape\n> ./node_modules/.bin/tape && echo 'found'\nfound\n\n# vanilla which(1) still finds global tape\n> which tape\n/usr/local/bin/tape\n\n# npm-which finds locally installed tape :)\n> npm-which tape\n/Users/timoxley/Projects/npm-which/node_modules/.bin/tape\n```\n\n### Programmatic\n\n#### Asynchronous\n\n```js\nvar which = require('npm-which')\nwhich('tape', function(err, pathToTape) {\n  if (err) return console.error(err.message)\n  console.log(pathToTape) // /Users/.../node_modules/.bin/tape\n})\n```\n\n#### Synchronous\n\n```js\nvar which = require('npm-which')\nvar pathToTape = which.sync('tape')\nconsole.log(pathToTape) // /Users/.../node_modules/.bin/tape\n```\n\n#### Options\n\nBoth async and sync versions take an optional options object:\n\n* Set `options.env` if you wish to use something other than `process.env` (the default)\n* Set `options.cwd` if you wish to use something other than `process.cwd()` (the default)\n\n```js\nwhich('tape', {cwd: '/some/other/path'}, function() {\n  // ...\n})\n```\n\n## Why\n\n#### npm is slow to boot\n\n* Shelling out to `npm bin` is very slow; it has to wait for all of npm to boot up â€“ this often takes longer than the actual script you want to execute!\n\n#### Hard-coding paths to modules is very fragile\n\n* You can't rely on './node_modules' actually containing your module! The module may exist much higher in the directory hierarchy.\n* `npm bin` returns the location of the `./node_modules/.bin` directory, but it does not take into account being called within the context of another module, also, npm slow.\n* If the module does exist in a parent directory, then './node_modules/.bin' will be missing your module's executable.\n\n## License\n\nMIT\n",
  "readmeFilename": "Readme.md",
  "_id": "npm-which@1.0.2",
  "_shasum": "132d209b7f73abfafd4f3f555fd1066d8d8ec202",
  "_from": "npm-which@^1.0.1",
  "_resolved": "https://registry.npmjs.org/npm-which/-/npm-which-1.0.2.tgz"
}
