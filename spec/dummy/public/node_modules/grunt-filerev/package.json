{
  "name": "grunt-filerev",
  "version": "0.2.1",
  "description": "Asset revisioning by using file content hashing",
  "keywords": [
    "gruntplugin",
    "optimize",
    "rev",
    "revision",
    "minify",
    "assets"
  ],
  "author": {
    "name": "Frederick Ros",
    "email": "frederick.ros@gmail.com",
    "url": "https://github.com/sleeper"
  },
  "repository": {
    "type": "git",
    "url": "git://github.com/yeoman/grunt-filerev.git"
  },
  "scripts": {
    "test": "grunt"
  },
  "dependencies": {
    "chalk": "~0.4.0",
    "each-async": "~0.1.0"
  },
  "devDependencies": {
    "grunt": "~0.4.2",
    "grunt-contrib-copy": "~0.4.0",
    "grunt-contrib-clean": "~0.5.0",
    "grunt-simple-mocha": "~0.4.0",
    "grunt-contrib-jshint": "~0.7.2"
  },
  "peerDependencies": {
    "grunt": ">=0.4.0"
  },
  "engines": {
    "node": ">=0.10.0"
  },
  "licenses": {
    "type": "BSD"
  },
  "readme": "# grunt-filerev [![Build Status](https://secure.travis-ci.org/yeoman/grunt-filerev.png?branch=master)](http://travis-ci.org/yeoman/grunt-filerev) [![Built with Grunt](https://cdn.gruntjs.com/builtwith.png)](http://gruntjs.com/)\n\n> Static asset revisioning through file content hash\n\n\n## Getting Started\n\nIf you haven't used [grunt][] before, be sure to check out the [Getting Started][] guide, as it explains how to create a [gruntfile][Getting Started] as well as install and use grunt plugins. Once you're familiar with that process, install this plugin with this command:\n\n```shell\nnpm install --save-dev grunt-filerev\n```\n\n[grunt]: http://gruntjs.com\n[Getting Started]: http://gruntjs.com/getting-started\n\n\n## Overview\n\nThis task will revision your files based on its contents. You should then set the files to expire far into the future for better caching and it will only update when it changes.\n\n\n### Example\n\n```js\ngrunt.initConfig({\n  filerev: {\n    options: {\n      encoding: 'utf8',\n      algorithm: 'md5',\n      length: 8\n    },\n    images: {\n      src: 'img/**/*.{jpg,jpeg,gif,png,webp}'\n    }\n  },\n});\n```\n\n\n### Options\n\n#### options.encoding\n\nType: `String`  \nDefault: `'utf8'`\n\nThe file encoding.\n\n#### options.algorithm\n\nType: `String`  \nDefault: `'md5'`\n\n`algorithm` is dependent on the available algorithms supported by the version of OpenSSL on the platform. Examples are `'sha1'`, `'md5'`, `'sha256'`, `'sha512'`, etc. On recent releases, `openssl list-message-digest-algorithms` will display the available digest algorithms.\n\n#### options.length\n\nType: `Number`  \nDefault: `8`\n\nThe number of characters of the file hash to prefix the file name with.\n\n### Destination\n\nIt will overwrite the `src` files if you don't specify a `dest`:\n\n```js\nfilerev: {\n  images: {\n    src: ['img1.png', 'img2.png'],\n    dest: 'tmp'\n  }\n}\n```\n#### Summary\n\nThe task keeps track of all files created and its sources in a summary that is\nexposed through the `grunt.filerev.summary` object. It can be used to replace\nreferences to the revved files or debugging purposes. The key of the object is\nthe original filename, the value is the new revved path.\n\nFor a configuration like this\n\n```js\nfilerev: {\n  images: {\n    src: ['img1.png', 'img2.png'],\n    dest: 'tmp'\n  }\n}\n```\n\nthe content `grunt.filerev.summary` could look like that:\n\n```js\n{\n  'img1.png': 'tmp/img1.59bcc3ad.png',\n  'img2.png': 'tmp/img2.060b1aa6.png'\n}\n```\n\n## License\n\n[BSD license](http://opensource.org/licenses/bsd-license.php) and copyright Google\n",
  "readmeFilename": "README.md",
  "bugs": {
    "url": "https://github.com/yeoman/grunt-filerev/issues"
  },
  "homepage": "https://github.com/yeoman/grunt-filerev",
  "_id": "grunt-filerev@0.2.1",
  "_shasum": "4af9e0cfeda7bb01670765697911229811f6f4d3",
  "_from": "grunt-filerev@^0.2.1",
  "_resolved": "https://registry.npmjs.org/grunt-filerev/-/grunt-filerev-0.2.1.tgz"
}
